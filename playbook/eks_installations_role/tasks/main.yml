---
# eks_installations.yml

- name: Ensure unzip is installed
  ansible.builtin.package:
    name: unzip
    state: present

- name: Install AWS CLI
  ansible.builtin.get_url:
    url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
    dest: "/tmp/awscliv2.zip"
    mode: '0644'
  register: aws_cli_download

- name: Extract and install AWS CLI
  ansible.builtin.unarchive:
    src: /tmp/awscliv2.zip
    dest: /tmp
    remote_src: yes
  when: aws_cli_download is changed

- name: Run AWS CLI installer
  ansible.builtin.command: "/tmp/aws/install"
  args:
    creates: "/usr/local/bin/aws"
  when: aws_cli_download is changed

- name: Get the latest stable kubectl release URL
  ansible.builtin.command: "curl -L -s https://dl.k8s.io/release/stable.txt"
  register: kubectl_version
  changed_when: false

- name: Install kubectl
  ansible.builtin.get_url:
    url: "https://dl.k8s.io/release/{{ kubectl_version.stdout }}/bin/linux/amd64/kubectl"
    dest: "/usr/local/bin/kubectl"
    mode: '0755'

- name: Verify kubectl installation
  ansible.builtin.command: "kubectl version --client"
  changed_when: false
  ignore_errors: true
  register: kubectl_version

- name: Get the latest eksctl release version
  ansible.builtin.shell: |
    curl -L -s https://api.github.com/repos/weaveworks/eksctl/releases/latest | grep 'tag_name' | cut -d '"' -f 4
  register: eksctl_version
  changed_when: false

- name: Install eksctl
  block:
    - name: Get the current OS type
      command: uname -s
      register: os_type

    - name: Set the eksctl download URL
      set_fact:
        eksctl_url: "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_{{ os_type.stdout }}_amd64.tar.gz"

    - name: Download eksctl
      ansible.builtin.get_url:
        url: "{{ eksctl_url }}"
        dest: "/tmp/eksctl.tar.gz"
        mode: '0644'
      register: eksctl_download

    - name: Extract eksctl
      ansible.builtin.unarchive:
        src: /tmp/eksctl.tar.gz
        dest: /tmp/
        remote_src: yes
      when: eksctl_download is changed

    - name: Move eksctl to /usr/local/bin
      ansible.builtin.command: "mv /tmp/eksctl /usr/local/bin/"
      args:
        creates: "/usr/local/bin/eksctl"
      when: eksctl_download is changed

    - name: Verify eksctl installation
      ansible.builtin.command: "eksctl version"
      changed_when: false
      ignore_errors: true
      register: eksctl_version

- name: Get the latest Helm release version
  uri:
    url: "https://api.github.com/repos/helm/helm/releases/latest"
    return_content: yes
  register: helm_release

- name: Set the Helm version
  set_fact:
    helm_version: "{{ helm_release.json.tag_name }}"

- name: Set the Helm download URL
  set_fact:
    helm_url: "https://get.helm.sh/helm-{{ helm_version }}-{{ ansible_distribution | lower }}-amd64.tar.gz"

- name: Download Helm
  ansible.builtin.get_url:
    url: "{{ helm_url }}"
    dest: "/tmp/helm.tar.gz"

- name: Extract Helm
  ansible.builtin.unarchive:
    src: /tmp/helm.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Move Helm to /usr/local/bin
  ansible.builtin.command: "mv /tmp/linux-amd64/helm /usr/local/bin/helm"
  args:
    creates: "/usr/local/bin/helm"

- name: Verify Helm installation
  ansible.builtin.command: "helm version --short"
  changed_when: false
  ignore_errors: true
  register: helm_version_result

- name: Display Helm version
  ansible.builtin.debug:
    msg: "Helm version: {{ helm_version_result.stdout }}"


- name: Display installation results
  ansible.builtin.debug:
    msg:
      - "AWS CLI installed: {{ aws_cli_download.changed }}"
      - "kubectl version: {{ kubectl_version.stdout }}"
      - "eksctl version: {{ eksctl_version.stdout }}"
      - "Helm version: {{ helm_version.stdout }}"



